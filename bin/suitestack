#!/usr/bin/env node

var program = require("commander"),
    suitestack = require("suitestack"),
    browserify = require("browserify"),
    Reporter = require("suitestack-reporter"),
    after = require("after"),
    exec = require("child_process").exec,
    fs = require("fs"),
    path = require("path"),
    isJsFile = /.js$/

program
    .version("0.1.0")
    .usage('[options] <file...>')
    .option("-n, --node <name>", "Set reporter for node")
    .option("-j, --jsdom", "Run tests through jsdom")
    .option("-b, --browsers <config>", "Run tests through browsers")
    .option("-t, --testling <config>", "Run testling tests")
    .parse(process.argv)

after.flow([
    function getFiles(next) {
        var uri = path.join(process.cwd(), program.args[0]),
            files = this.files = []

        iterateFiles(uri, addToFiles)

        next()

        function addToFiles(fileName) {
            files.push(fileName)
        }
    },
    function node(next) {
        if (!program.node) {
            return next()
        }

        var reporter = Reporter(program.node, suitestack)

        reporter.on("end", next)

        console.log("NODE TEST:")
        this.files.forEach(requireFile)

        function requireFile(fileName) {
            require(fileName)
        }
    },
    function testling(next) {
        if (!program.testling) {
            return next()
        }

        var code = 
            "var suitestack = require('suitestack')\n" +
            "\n" + 
            "reporter(suitestack)" +
            "\n",
            fakePath = path.join(__dirname, "./fake.js"),
            relativePath = path.relative(process.cwd(), fakePath)

        this.files.forEach(addToCode)

        code += fs.readFileSync(path.join(__dirname, "../support/reporter.js"))
            .toString()

        fs.writeFileSync(fakePath, code)

        var config = require(path.join(process.cwd(), program.testling))

        config.files.push(fakePath)

        var cmd = "tar -cf- $(find . -name \*.js) | curl -sSNT- " +
            "-u " + config.auth + " 'testling.com/?main=" + relativePath +
            "\&browsers=" + config.browsers.join(",") + "\&noinstrument'"

        console.log("testling cmd", cmd)

        var child = exec(cmd, function (err, stdout, stderr) {
            console.log(err, stdout, stderr)
        })

        child.stdout.pipe(process.stdout)
        child.stderr.pipe(process.stderr)

        function addToCode(fileName) {
            var relative = path.relative(path.dirname(process.cwd()), fileName)

            code += "require('" + relative + "')\n"
        }
    },
    function browsers() {
        if (!program.browsers) {
            return
        }

        var code = 
            "var suitestack = require('suitestack'),\n" +
            "   reporter = require('suitestack-reporter')\n" +
            "\n" +
            "reporter('mocha-HTML', suitestack)\n" +
            "\n"

        this.files.forEach(addToCode)

        var bundle = browserify()
        bundle.addEntry("./fake.js", { body: code })
        var compiled = bundle.bundle()
        fs.writeFileSync(path.join(__dirname, "./fake.js"), compiled)

        var config = require(path.join(process.cwd(), program.browsers))

        Object.keys(config).forEach(runBrowser)

        function addToCode(fileName) {
            var relative = path.relative(path.dirname(process.cwd()), fileName)

            code += "require('" + relative + "')\n"
        }

        function runBrowser(name) {
            exec(config[name] + " ./bin/index.html")
        }
    }
], {})

function checkjsdom() {
    if (program.jsdom) {
        var jsdom = require("jsdom")
        var code = 
            "var suitestack = require('suitestack'),\n" +
            "   reporter = require('suitestack-reporter')\n" +
            "\n" +
            "reporter('mocha-HTML', suitestack)\n" +
            "\n"

        files.forEach(addToCode)

        //console.log("code", code)

        var bundle = browserify()
        bundle.addEntry("./fake.js", { body: code })
        var compiled = bundle.bundle()
        fs.writeFileSync(path.join(__dirname, "./fake.js"), compiled)

        jsdom.env({
            html: fs.readFileSync(path.join(__dirname, "./index.html")),
            src: [compiled],
            done: extractFromWindow
        })
    }

    function addToCode(fileName) {
        var relative = path.relative(path.dirname(process.cwd()), fileName)

        code += "require('" + relative + "')\n"
    }

    function extractFromWindow(errors, window) {
        console.log("errors", errors)  
        var document = window.document
        console.log(document.innerHTML)
    }
}

function iterateFiles(uri, callback) {
    var files = fs.readdirSync(uri)

    files.sort().forEach(isDirOrFile)

    function isDirOrFile(fileName) {
        fileName = path.join(uri, fileName)

        var stat = fs.statSync(fileName)

        if (stat.isDirectory()) {
            iterateFiles(fileName, callback)
        } else if (stat.isFile() && isJsFile.test(fileName)) {
            callback(fileName)
        }
    }
}